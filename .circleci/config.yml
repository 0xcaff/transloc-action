version: 2
jobs:
  test:
    docker:
      - image: node:9.5.0

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-

      - run:
          name: Create Reports Folder
          command: mkdir -p ./reports

      - run:
          name: Install Deps
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Install Typings
          command: yarn typings

      - run:
          name: Code Style Lint
          command: yarn check-style

      - run:
          name: Flow Check
          command: yarn flow check

      - run:
          name: Test
          command: yarn jest --ci --testResultsProcessor="jest-junit" --coverage
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - run:
          name: Lint
          command: yarn lint

      - run:
          name: Build
          command: yarn build

      - store_artifacts:
          path: ./coverage

      - store_test_results:
          path: ./reports/junit

      - persist_to_workspace:
          root: .
          paths:
            - package.json
            - yarn.lock
            - lib/**/*
            - lib/*

  deploy-function:
    docker:
      - image: google/cloud-sdk

    steps:
      - attach_workspace:
          at: /project

      - run:
          name: Import Credentials
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json

      - run:
          name: Register Credentials
          command: gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json

      - run:
          name: Set Project
          command: gcloud config set project $GCLOUD_PROJECT_ID

      - run:
          name: Deploy
          command: gcloud beta functions deploy Handler --source /project --trigger-http --entry-point handleHttp

  deploy-dialogflow:
    docker:
      - image: node:9.5.0

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-

      - run:
          name: Install Deps
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Save Credentials
          command: echo $DIALOGFLOW_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json

      - run:
          name: Deploy Dialogflow
          command: yarn dialogflow-cli import --credentials ${HOME}/gcloud-service-key.json dialogflow/

workflows:
  version: 2
  test:
    jobs:
      - test
      - hold:
          type: approval
          requires:
           - test
          filters:
            branches:
              only: master

      - deploy-function:
          requires:
            - hold

      - deploy-dialogflow:
          requires:
            - hold
